apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-forest-app
  namespace: ${NAMESPACE}
  labels:
    app: project-forest
    version: ${IMAGE_TAG}
    environment: ${ENVIRONMENT}
spec:
  replicas: ${REPLICA_COUNT}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: project-forest
  template:
    metadata:
      labels:
        app: project-forest
        version: ${IMAGE_TAG}
        environment: ${ENVIRONMENT}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: project-forest-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: project-forest
        image: ${REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
        imagePullPolicy: ${IMAGE_PULL_POLICY:-IfNotPresent}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Database credentials from secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        # Application secrets
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: jwt-secret
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: api-key
        # External API keys (if configured)
        - name: DEEPL_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-api-secret
              key: deepl-api-key
              optional: true
        - name: GOOGLE_TRANSLATE_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-api-secret
              key: google-translate-api-key
              optional: true
        envFrom:
        - configMapRef:
            name: project-forest-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: ${LIVENESS_CHECK_PATH:-/api/health}
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: ${READINESS_CHECK_PATH:-/api/health}
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: ${HEALTH_CHECK_PATH:-/api/health}
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12
        volumeMounts:
        - name: uploads
          mountPath: ${UPLOAD_DIR:-/app/uploads}
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: uploads
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "project-forest"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - project-forest
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: project-forest-service-account
  namespace: ${NAMESPACE}
  labels:
    app: project-forest
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: project-forest-pdb
  namespace: ${NAMESPACE}
  labels:
    app: project-forest
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: project-forest
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: project-forest-hpa
  namespace: ${NAMESPACE}
  labels:
    app: project-forest
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: project-forest-app
  minReplicas: ${MIN_REPLICAS:-2}
  maxReplicas: ${MAX_REPLICAS:-10}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: ${TARGET_CPU_UTILIZATION:-70}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: ${TARGET_MEMORY_UTILIZATION:-80}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60